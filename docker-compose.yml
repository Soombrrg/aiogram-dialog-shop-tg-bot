services:
  bot:
    image: "bot"
    stop_signal: SIGINT
    environment:
      - BOT_TOKEN
#      - DB_HOST
#      - DB_USER
#      - DB_PASS
#      - DB_NAME
#    depends_on:
#      redis:
#        condition: service_healthy
#      db:
#        condition: service_healthy
    build:
      context: .
    working_dir: "/usr/src/app/tg_bot"
    volumes:
      - .:/usr/src/app/tg_bot
    command: >
      sh -c "python bot.py"
#    restart: always
    env_file:
      - ".env"

#  db:
#      image: postgres:12-alpine
#      restart: unless-stopped
#      environment:
#          POSTGRES_USER: ${DB_USER}
#          POSTGRES_PASSWORD: ${DB_PASS}
#          POSTGRES_DB: ${DB_NAME}
#      volumes:
#          - postgres-data:/var/lib/postgresql/data
#      ports:
#        - "${POSTGRES_PORT}:5432"
#      healthcheck:
#        test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
#        interval: 5s
#        timeout: 5s
#        retries: 5
#      logging:
#        driver: "json-file"
#        options:
#          max-size: "10m"
#          max-file: "5"
#          compress: "true"
#      env_file:
#        - ".env"
#
#  # This is optional, not necessary
#  pgadmin:
#      image: dpage/pgadmin4
#      restart: always
#      environment:
#          PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
#          PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
#      ports:
#          - "127.0.0.1:5050:80"
#      volumes:
#          # Don't forget to set owner:group for this dir as 5050:5050
#          # (sudo chown -R 5050:5050 <this path>)
#          - ./postgres-data:/var/lib/pgadmin

# Redis configuration
#  redis:
#    image: redis:alpine
#    container_name: redis
#    restart: always
#    volumes:
#      - redis_data:/data
#    ports:
#      - '6379:6379'
#    command: redis-server --appendonly yes
#
#  redis_insight:
#    image: redislabs/redisinsight:1.14.0
#    container_name: redis_insight
#    restart: always
#    ports:
#      - '8001:8001'
#    volumes:
#      - redis_insight_data:/db
#    depends_on:
#      - redis

#volumes:
#  redis_data:
#  redis_insight_data:
#  postgres-data:



